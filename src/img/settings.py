"""
Django settings for img project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

from django.urls import reverse_lazy

import getconf

# Build paths inside the project like this: BASE_DIR / child
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = BASE_DIR.parent
SITE_NAME = os.path.basename(PROJECT_ROOT)
PUBLIC_ROOT = PROJECT_ROOT / "public"

CONFIG = getconf.ConfigGetter(SITE_NAME, [PROJECT_ROOT / "local_settings.ini"])

ENVIRONMENT = CONFIG.getstr("environment", "dev")
assert ENVIRONMENT in ("prod", "dev", "test")


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = CONFIG.getstr("django.secret_key", "unsecure")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONFIG.getbool("django.debug", ENVIRONMENT != "prod")

ALLOWED_HOSTS = CONFIG.getlist("django.allowed_hosts")


# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
]

THIRD_PARTY_APPS = ["pipeline", "widget_tweaks"]

LOCAL_APPS = ["images", "memes", "img"]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.sites.middleware.CurrentSiteMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "img.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.template.context_processors.tz",
                "django.contrib.messages.context_processors.messages",
                "images.context_processors.inappropriate_counter",
            ]
        },
    }
]

WSGI_APPLICATION = "img.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": CONFIG.getstr("db.engine", "django.db.backends.sqlite3"),
        "NAME": CONFIG.getstr("db.name", str(PROJECT_ROOT / "img.sqlite3")),
        "USER": CONFIG.getstr("db.user"),
        "PASSWORD": CONFIG.getstr("db.password"),
        "HOST": CONFIG.getstr("db.host"),
        "PORT": CONFIG.getstr("db.port"),  # "" means default port
        "ATOMIC_REQUESTS": CONFIG.getbool("db.atomic_requests", True),
        "AUTOCOMMIT": CONFIG.getbool("db.autocommit", True),
        "CONN_MAX_AGE": 600,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = CONFIG.getstr("django.language_code", "en-us")

TIME_ZONE = CONFIG.getstr("django.time_zone", "UTC")

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = CONFIG.getstr("django.static_root", str(PUBLIC_ROOT / "static"))
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "pipeline.finders.PipelineFinder",
)

MEDIA_ROOT = CONFIG.getstr("django.media_root", str(PUBLIC_ROOT / "media"))
MEDIA_URL = "/media/"

STATICFILES_STORAGE = "pipeline.storage.PipelineManifestStorage"

PIPELINE_CSS = {
    "base": {
        "source_filenames": ("css/bootstrap.css", "css/project.css"),
        "output_filename": "css/base.css",
    }
}

PIPELINE_JS = {
    "base": {
        "source_filenames": ("js/jquery.js", "js/jquery.lazy.js", "js/bootstrap.js"),
        "output_filename": "js/base.js",
    },
    "meme": {"source_filenames": ("js/meme.js",), "output_filename": "js/meme.js"},
}

PIPELINE_JS_COMPRESSOR = None

PIPELINE = {
    "STYLESHEETS": PIPELINE_CSS,
    "JAVASCRIPT": PIPELINE_JS,
}

LOGIN_REDIRECT_URL = reverse_lazy("image_list")

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
EMAIL_SUBJECT_PREFIX = "[imghost] "

LEGAL_MENTIONS = CONFIG.getstr("img.legal_mentions")

# Dev settings

if ENVIRONMENT == "dev":
    INSTALLED_APPS += ["debug_toolbar", "django_extensions"]
    MIDDLEWARE += ["debug_toolbar.middleware.DebugToolbarMiddleware"]

# Prod settings

if ENVIRONMENT == "prod":
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST = CONFIG.getstr("email.host", "localhost")
    EMAIL_PORT = CONFIG.getint("email.port", 25)
    EMAIL_USE_SSL = CONFIG.getbool("email.use_ssl")
    EMAIL_USE_TLS = CONFIG.getbool("email.use_tls")

    # The address used as From: in send_mail()
    DEFAULT_FROM_EMAIL = CONFIG.getstr(
        "django.default_from_email", "webmaster@localhost"
    )

    # The address used as From: in error messages
    SERVER_EMAIL = CONFIG.getstr("django.server_email", "root@localhost")
    ADMINS = [("unused", email) for email in CONFIG.getlist("django.admins")]

    CSRF_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 63072000  # 2 years
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SECURE = True

    TEMPLATES[0]["APP_DIRS"] = False  # Must not be set with loaders
    TEMPLATES[0]["OPTIONS"]["loaders"] = [
        (
            "django.template.loaders.cached.Loader",
            [
                "django.template.loaders.filesystem.Loader",
                "django.template.loaders.app_directories.Loader",
            ],
        )
    ]
